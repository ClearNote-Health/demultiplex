name: nf-core CI
# This workflow runs the pipeline with the minimal test dataset to check that it completes without any syntax errors
on:
  pull_request:
    branches:
      - dev
      - master
  release:
    types: [published]

env:
  NXF_ANSI_LOG: false
  CAPSULE_LOG: none
  NFTEST_VER: "0.9.0"

concurrency:
  group: "${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}"
  cancel-in-progress: true

jobs:
  define_nxf_versions:
    name: Choose nextflow versions to test against depending on target branch
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.nxf_versions.outputs.matrix }}
    steps:
      - id: nxf_versions
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" && "${{ github.base_ref }}" == "dev" && "${{ matrix.NXF_VER }}" != "latest-everything" ]]; then
            echo matrix='["latest-stable"]' | tee -a $GITHUB_OUTPUT
          else
            echo matrix='["latest-stable", "23.04.0"]' | tee -a $GITHUB_OUTPUT
          fi

  test:
    name: Run pipeline with test data
    needs: define_nxf_versions
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shard: [1, 2, 3, 4, 5, 6, 7, 8]
        NXF_VER: ${{ fromJson(needs.define_nxf_versions.outputs.matrix) }}
        profile: ["docker"]
    steps:
      - name: Check out pipeline code
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4
        with:
          fetch-depth: 0

      # - name: Set up JDK 11
      #   uses: actions/setup-java@v2
      #   with:
      #     java-version: "11"
      #     distribution: "adopt"

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          architecture: "x64"

      - name: Install pdiff to see diff between nf-test snapshots
        run: |
          python -m pip install --upgrade pip
          pip install pdiff

      - uses: nf-core/setup-nextflow@v2
        with:
          version: "${{ matrix.NXF_VER }}"

      - name: Install nf-test
        run: |
          wget -qO- https://get.nf-test.com | bash
          sudo mv nf-test /usr/local/bin/

      - name: Run Tests (Shard ${{ matrix.shard }}/${{ strategy.job-total }})
        run: nf-test test --ci --shard ${{ matrix.shard }}/${{ strategy.job-total }} --changed-since HEAD^ --profile "+${{ matrix.profile }}"

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          report_paths: test.xml
